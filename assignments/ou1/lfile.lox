1+1-1-1-1;                     // Expect: Nothing (no output)

print 1+1+1+1+1-1;             // Expect: 4.0
print 2*2;                     // Expect: 4.0
print 8/2.0;                   // Expect: 4.0

print "--------------------------------------------------";

print "hej";                   // Expect: hej
print "Fi"+"lip"+" "+"N";      // Expect: Filip N

print "--------------------------------------------------";

var a;
print a;                       // Expect: nil
a = 5;
print a;                       // Expect: 5.0

var b;
print b=2;                     // Expect: 2.0
print b;                       // Expect: 2.0
print a=3*3;                   // Expect: 9.0
print a-1;                     // Expect: 8.0

print "--------------------------------------------------";

print 1>2;                     // Expect: false
print 1>=2;                    // Expect: false
print 1<2;                     // Expect: true
print 1<=2;                    // Expect: true
print 1==1;                    // Expect: true
print 1==2;                    // Expect: false
print false==true;             // Expect: false
print false==false;            // Expect: true
print "--------------------------------------------------";


// Note: These tests implicitly depend on ints being truthy.

// Return the first non-true argument.
print false and 1; // expect: false
print true and 1; // expect: 1
print 1 and 2 and false; // expect: false

// Return the last argument if all are true.
print 1 and true; // expect: true
print 1 and 2 and 3; // expect: 3


// Short-circuit at the first false argument.
var a = "before";
var b = "before";
(a = true) and (b = false) and(a = "bad");
print a; // expect: true
print b; // expect: false


print "--------------------------------------------------";

// Return the first true argument.
print 1 or true; // expect: 1
print false or 1; // expect: 1
print false or false or true; // expect: true

// Return the last argument if all are false.
print false or false; // expect: false
print false or false or false; // expect: false


// Short-circuit at the first true argument.
var a = "before";
var b = "before";
(a = false) or
    (b = true) or
    (a = "bad");
print a; // expect: false
print b; // expect: true


print "--------------------------------------------------";
if(true) print "true!";
if(false) print "false!"; else print "true!";


// A dangling else binds to the right-most if.
if (true) if (false) print "bad"; else print "good"; // expect: good
if (false) if (true) print "bad"; else print "bad";




print "--------------------------------------------------";


var q;
var q = 0;
if(true){
    print "In block";
    var l = 10;
    print l;
    print "In block";
    q = 9;
}
print "After block";
print q;

var i = 0;
while(i<2) {i = i+1;}
print "after";

var a = "global";

{
    var b = "inner";
    {
        a = "inner inner";
        b = "inner inner";
    }
    print a;
    print b;
}


print "--------------------------------------------------";
// Test Camparison

print ("a" == "a");
print "a" != "b";
print "a" == "b";
print "a" == 1;
print "a" > "b";                  // expect: false
print "a" and "b" and "c" or "d"; // expect: c


print "--------------------------------------------------";
// Test Unary

print !2.02;
print !true;
print !false;
print -(1-2);


print "--------------------------------------------------";
// Numbers

print 123;     // expect: 123
print 987654;  // expect: 987654
print 0;       // expect: 0
print -0;      // expect: -0

print 123.456; // expect: 123.456
print -0.001;  // expect: -0.001


print "--------------------------------------------------";
print "--------------------------------------------------";

{
  var a = "before";
  print a; // expect: before

  a = "after";
  print a; // expect: after

  print a = "arg"; // expect: arg
  print a; // expect: arg
}